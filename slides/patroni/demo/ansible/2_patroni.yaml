---
- name: Patroni
  hosts: all
  handlers:
    - name: 'Restart Consul'
      ansible.builtin.systemd:
        daemon_reload: true
        name: 'consul.service'
        state: restarted
    - name: "Reload patroni"
      ansible.builtin.service:
        name: patroni
        state: reloaded
        daemon_reload: true
  vars:
    # postgres ################################################################
    postgres_version: 15
    # patroni #################################################################
    patroni_data_dir: /srv/postgres
    patroni_log_directory: /var/log/postgresql/

    patroni_version: ==3.2.1
    patroni_deps_consul_version: ==1.1.0
    patroni_deps_psycopg_version: ==2.9.9
    # patroni_cluster_name need to be the same as the hostgroup
    patroni_log_level: INFO
    patroni_bin_dir: /usr/lib/postgresql/{{ postgres_version }}/bin/
    patroni_consul_hostname: 127.0.0.1
    patroni_consul_port: 8500
    patroni_consul_scheme: http
    patroni_consul_register_service: true
    patroni_initdb_enable: true
    patroni_pgbackrest_bootstrap_enable: false
    patroni_postgresql_single_node_cluster: false
    patroni_cluster_name: database
    patroni_restapi_authentication_username: patroni
    patroni_restapi_authentication_password: patroni
    patroni_postgresql_pg_hba_entries:
      - "host all all 0.0.0.0/0 trust"
      - "local all all peer"
      - "local all postgres trust"
      - "host replication replication 10.66.0.0/24 md5"
    patroni_postgresql_parameters:
      archive_timeout: 120s
      hot_standby: 'on'
      listen_addresses: '*'
      logging_collector: 'on'
      max_replication_slots: 10
      max_wal_senders: 10
      wal_level: replica
      wal_log_hints: 'on'
      checkpoint_timeout: '10min'
      max_wal_size: '4GB'
      wal_compression: 'on'
      unix_socket_directories: "/var/run/postgresql/"
      log_directory: "{{ patroni_data_dir }}/pg_log/"
    # pgbackrest ##############################################################
    pgbackrest_enable: false
    # consul ##################################################################
    consul_bootstrap_expect: 3
    consul_ui: "true" # need to be a string
    consul_data_dir: /opt/consul
    # vault ###################################################################
    # NOTE: Its just a demo calm down ;)
    vault:
      consul:
        psk: "tyjuKOPQwp6RyI9Ryvq8gQfWXkalpFJ5O58ygSlddDg="
      patroni:
        replication:
          username: replication
          password: replication
        superuser:
          username: superuser
          password: superuser
        rewind:
          username: rewind
          password: rewind
  tasks:
    # ############################################################################
    # # Comon tasks
    # ############################################################################
    # - name: "Write hosts file"
    #   ansible.builtin.template:
    #     src: hosts.j2
    #     dest: /etc/hosts
    #     owner: root
    #     group: root
    #     mode: "0644"
    #
    # ############################################################################
    # # Consul
    # ############################################################################
    # - name: Add HashiCorp GPG key
    #   ansible.builtin.apt_key:
    #     url: https://apt.releases.hashicorp.com/gpg
    #     state: present
    #
    # - name: Add HashiCorp repository
    #   ansible.builtin.apt_repository:
    #     repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    #     state: present
    #
    # - name: Install Consul
    #   ansible.builtin.apt:
    #     name: consul
    #     state: present
    #     update_cache: true
    #
    # - name: Remove consul.hcl
    #   ansible.builtin.file:
    #     path: /etc/consul.d/consul.hcl
    #     state: absent
    #
    # - name: Create the directory for Consul data
    #   ansible.builtin.file:
    #     path: "{{ consul_data_dir }}"
    #     state: directory
    #     owner: "consul"
    #     group: "consul"
    #     mode: "0755"
    #
    # - name: Determine if the host should use the server configuration
    #   # Set a variable indicating whether the host should use the server configuration.
    #   # The server configuration is used if:
    #   # 1. The `consul_server` group is empty or not defined.
    #   # 2. The hostname is in the `consul_server` group.
    #   ansible.builtin.set_fact:
    #     use_server_config: "{{ (groups['consul_server'] | default([]) | length == 0) or (inventory_hostname in groups['consul_server'] | default([])) }}"
    #
    # - name: Add config to Consul.service
    #   ansible.builtin.template:
    #     src: "{{ 'consul-server.service.j2' if use_server_config else 'consul-client.service.j2' }}"
    #     dest: "/lib/systemd/system/consul.service"
    #     owner: "consul"
    #     group: "consul"
    #     mode: "0644"
    #
    # - name: Copy Consul configuration
    #   ansible.builtin.template:
    #     src: "{{ 'config-server.json.j2' if use_server_config else 'config-client.json.j2' }}"
    #     dest: "/etc/consul.d/config.json"
    #     owner: "consul"
    #     group: "consul"
    #     mode: "0644"
    #   notify:
    #     - Restart Consul
    #
    # ############################################################################
    # # postgresql
    # ############################################################################
    #
    # - name: "Add postgresql key"
    #   ansible.builtin.apt_key:
    #     url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    #     id: ACCC4CF8
    #     state: present
    #
    # - name: "Add postgresql repo"
    #   ansible.builtin.apt_repository:
    #     repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
    #     filename: pgdg
    #     state: present
    #     update_cache: true
    #
    # - name: "Install postgresql {{ postgres_version }}"
    #   ansible.builtin.apt:
    #     pkg: "{{ pkgs }}"
    #     state: present
    #     update_cache: true
    #     cache_valid_time: 3600
    #   vars:
    #     pkgs:
    #       - libpq-dev
    #       - "postgresql-{{ postgres_version }}"
    #       - "postgresql-client-{{ postgres_version }}"
    #       - "postgresql-server-dev-{{ postgres_version }}"
    #       - "postgresql-doc-{{ postgres_version }}"
    #       - "postgresql-contrib-{{ postgres_version }}"
    #
    # - name: "Stop postgresql after install"
    #   ansible.builtin.systemd:
    #     name: postgresql
    #     state: stopped
    #     enabled: false

    ############################################################################
    # Patroni
    ############################################################################

    - name: Allow patroni / postgres to load watchdog and set permissons on the device
      community.general.sudoers:
        name: patroni-watchdog
        user: postgres
        commands:
          - "/sbin/modprobe softdog"
          - "/bin/chown postgres /dev/watchdog"

    - name: "Install Patroni dependencies via apt"
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-dev
          - libpq-dev

    - name: "Create Data folder"
      ansible.builtin.file:
        path: "{{ patroni_data_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: "0700"

    - name: "Create Patroni service"
      ansible.builtin.template:
        src: patroni.service.j2
        dest: /etc/systemd/system/patroni.service
        owner: root
        group: root
        mode: "0644"

    - name: "Create Patroni Config"
      ansible.builtin.template:
        src: patroni.yml.j2
        dest: /etc/patroni.yml
        owner: postgres
        group: postgres
        mode: "0644"
      notify: "Reload patroni"
      tags:
        - patroni
        - config

    - name: "Install Patroni via Pip"
      ansible.builtin.pip:
        name:
          - "patroni{{ patroni_version }}"
          - "python-consul{{ patroni_deps_consul_version }}"
          - "psycopg2{{ patroni_deps_psycopg_version }}"

    - name: "Enable and Start Patroni service"
      ansible.builtin.systemd:
        name: "patroni"
        enabled: true
        state: started
